[{"C:\\Users\\Rohith\\mern\\frontend\\src\\index.js":"1","C:\\Users\\Rohith\\mern\\frontend\\src\\App.js":"2","C:\\Users\\Rohith\\mern\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\header\\header.js":"4","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\footer\\footer.js":"5","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\header\\Header.js":"6","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\footer\\Footer.js":"7","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\landingpage\\landingpage.js":"8","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\landingpage\\Landingpage.js":"9","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\LoginPage\\Loginpage.js":"10","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\Registerpage\\Registerpage.js":"11","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\MainScreen.js":"12","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\Loading.js":"13","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\home\\home.js":"14","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\ErrorMessage.js":"15","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\edit\\Edit.js":"16","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\details\\info.js":"17","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\details\\Info.js":"18","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\explore\\Explore.js":"19","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\Thumb.js":"20","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\upload\\Upload.js":"21"},{"size":494,"mtime":1667373279688,"results":"22","hashOfConfig":"23"},{"size":1424,"mtime":1667458548419,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1663649728419,"results":"25","hashOfConfig":"23"},{"size":135,"mtime":1663779339909,"results":"26","hashOfConfig":"23"},{"size":135,"mtime":1663779330958,"results":"27","hashOfConfig":"23"},{"size":1360,"mtime":1669810293019,"results":"28","hashOfConfig":"23"},{"size":135,"mtime":1663779330958,"results":"29","hashOfConfig":"23"},{"size":1138,"mtime":1663784397722,"results":"30","hashOfConfig":"23"},{"size":1145,"mtime":1663786332039,"results":"31","hashOfConfig":"23"},{"size":3269,"mtime":1667225471003,"results":"32","hashOfConfig":"23"},{"size":4882,"mtime":1667276114329,"results":"33","hashOfConfig":"23"},{"size":544,"mtime":1663817391642,"results":"34","hashOfConfig":"23"},{"size":485,"mtime":1663824513582,"results":"35","hashOfConfig":"23"},{"size":2616,"mtime":1665933114900,"results":"36","hashOfConfig":"23"},{"size":289,"mtime":1664874946776,"results":"37","hashOfConfig":"23"},{"size":4881,"mtime":1665933701790,"results":"38","hashOfConfig":"23"},{"size":197,"mtime":1665933876671,"results":"39","hashOfConfig":"23"},{"size":1915,"mtime":1667406200150,"results":"40","hashOfConfig":"23"},{"size":3962,"mtime":1667453284749,"results":"41","hashOfConfig":"23"},{"size":477,"mtime":1667373850003,"results":"42","hashOfConfig":"23"},{"size":4821,"mtime":1670519411034,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"mb0qb",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"47"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"47"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},"C:\\Users\\Rohith\\mern\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\App.js",["115"],[],"// import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport './bootstrap.min.css'\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport Landingpage from './screens/landingpage/Landingpage';\nimport Loginpage from './screens/LoginPage/Loginpage';\nimport Registerpage from './screens/Registerpage/Registerpage';\nimport Info from './screens/details/Info.js';\nimport {BrowserRouter,Route,Routes} from 'react-router-dom';\nimport Edit from \"./screens/edit/Edit\"\nimport Home from './screens/home/home';\nimport Explore from './screens/explore/Explore';\nimport Upload from './screens/upload/Upload';\nconst App=()=> (\n    <BrowserRouter>\n        <Header/>\n        <main style={{minHeight:\"93vh\"}}>\n            {/* <Registerpage/> */}\n            <Routes>\n                <Route  path=\"/\" element={<Landingpage/>} />\n                <Route  path=\"/login\" element={<Loginpage/>} />\n                <Route  path=\"/register\" element={<Registerpage/>} />\n                <Route  path=\"/home\" element={<Home/>} />\n                <Route  path=\"/view/:id\" element={<Info/>} />\n                <Route  path=\"/edit/:id\" element={<Edit/>} />\n                <Route path=\"/explore\" element={<Explore/>}/>\n                <Route path=\"/upload\" element={<Upload/>}/>\n            </Routes>\n           \n        </main>\n        \n\n    </BrowserRouter>\n)\nexport default App;\n","C:\\Users\\Rohith\\mern\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\components\\header\\header.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\components\\footer\\footer.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\components\\header\\Header.js",["116","117"],[],"import React from 'react'\r\nimport {Navbar,Nav,NavDropdown,Form,FormControl,Container} from 'react-bootstrap'\r\nimport {useNavigate} from 'react-router-dom';\r\nconst Header = () => {\r\n    const navigate=useNavigate();\r\n  return (\r\n    <Navbar bg=\"primary\" expand=\"lg\" variant='dark'>\r\n        <Container>\r\n        <Navbar.Brand href=\"/\">Pokedex</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav'/>\r\n        <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='m-auto'>\r\n            {/* <Form inline>\r\n                <FormControl type=\"text\" placeholder=\"Search\" classname=\"mr-sm-2\"/>\r\n            </Form> */}\r\n            </Nav>\r\n            <Nav >\r\n                <Nav.Link href=\"/upload\">Upload</Nav.Link>\r\n                <Nav.Link href=\"/explore\">Explore</Nav.Link>\r\n                <NavDropdown title=\"User\" id=\"basic-nav-dropdown\">\r\n                    <NavDropdown.Item>My profile</NavDropdown.Item>\r\n                    {/* <NavDropdown.Divider /> */}\r\n                <NavDropdown.Item onClick={()=>{\r\n                    localStorage.removeItem('UserInfo');\r\n                    navigate(\"/\");\r\n                }}>Log Out</NavDropdown.Item>\r\n                </NavDropdown>\r\n            </Nav>\r\n            \r\n        </Navbar.Collapse>\r\n        </Container>\r\n        \r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\footer\\Footer.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\landingpage\\landingpage.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\landingpage\\Landingpage.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\LoginPage\\Loginpage.js",["118"],[],"import React, { useEffect, useState} from 'react'\r\nimport {Form,Button,Row,Col} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './Loginpage.css';\r\nimport axios from 'axios';\r\nimport Loading from '../../components/Loading';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport {useNavigate} from 'react-router-dom';\r\nconst Loginpage = () => {\r\n    const navigate=useNavigate();\r\n    const [email,setEmail]=useState(\"\");\r\n    const [id,setid]=useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n    const [password,setPassword]=useState(\"\");\r\n    const [error,setError]=useState(false);\r\n    const [loading,setLoading]=useState(false);\r\n    const[homepage,setHome]=useState(false);\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n    const submitHandler= async(e)=>{\r\n        e.preventDefault();\r\n\r\n        try{\r\n            const config={\r\n              baseURL: \"//localhost:5000\",\r\n              origin: true,\r\n              withCredentials: false,\r\n              headers:{\r\n                \"Content-type\":\"application/json\"\r\n              }\r\n            }\r\n            setLoading(true);\r\n            \r\n            console.log(email);\r\n            console.log(password);\r\n            const { data } = await axios.post(\"/api/users/login\",\r\n            {\r\n                email,\r\n                password,  \r\n            },\r\n            config  \r\n            );\r\n            console.log(\"debug\")\r\n            console.log(data);\r\n            localStorage.setItem('UserInfo',JSON.stringify(data));\r\n            setLoading(false);\r\n            setHome(true);\r\n            setid(data._id);\r\n        }\r\n        catch(error){\r\n            setError(error.response);\r\n            setLoading(false);\r\n            setMessage(error.response.data.message)\r\n            console.log(error.response.data);\r\n        }\r\n      }\r\n  return (\r\n\r\n    <MainScreen title=\"LOGIN\">\r\n         <div className=\"loginContainer\">\r\n            {loading && <Loading/>}\r\n            {/* {error && <ErrorMessage/>} */}\r\n            {message && <ErrorMessage variant='danger'>{message}</ErrorMessage>}\r\n            {homepage && id && navigate(`/view/${id}`)}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label className='emaill'>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Log In\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            New Customer ? <Link to=\"/register\">Register Here</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  )\r\n}\r\n\r\nexport default Loginpage","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\Registerpage\\Registerpage.js",["119"],[],"import React from 'react'\r\nimport {Button,Col,Form,FormControl,Row} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport ErrorMessage from '../../components/ErrorMessage'\r\nimport MainScreen from '../../components/MainScreen'\r\nimport Loading from '../../components/Loading'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nconst Registerpage = () => {\r\n  const nav=useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [roll, setRoll] = useState(\"\");\r\n  const [branch, setBranch] = useState(\"\");\r\n  const[homepage,setHome]=useState(false);\r\n  const [pic, setPic] = useState(\r\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n  );\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [loading, setLoading]=useState(false);\r\n  const [error, setError]=useState(false);\r\n  const submitHandler= async(e)=>{\r\n    e.preventDefault();\r\n    if(password!==confirmpassword){\r\n      setMessage(\"Passwords do not match\");\r\n    }\r\n    else{\r\n      setMessage(null);\r\n      try{\r\n        const config={\r\n          baseURL: \"//localhost:5000\",\r\n          origin: true,\r\n          withCredentials: false,\r\n          headers:{\r\n            \"Content-type\":\"application/json\"\r\n          }\r\n        };\r\n        setLoading(true);\r\n        const {data}= await axios.post(\r\n          \"/api/users\",\r\n          {name,email,password,pic,roll,branch},\r\n          config\r\n        );\r\n        setLoading(false);\r\n        localStorage.setItem('UserInfo',JSON.stringify(data));\r\n        setHome(true);\r\n      }\r\n      catch(error){\r\n          setError(error.message);\r\n      }\r\n    }\r\n    console.log(roll);\r\n  }\r\n  return (\r\n    <MainScreen title=\"REGISTER\">\r\n      <div className='loginContainer'>\r\n        {error && <ErrorMessage variant='danger'>{error}</ErrorMessage>}\r\n        {loading && <Loading/>}\r\n        {homepage&&nav(\"/login\")}\r\n        {message && <ErrorMessage variant='danger'>{message}</ErrorMessage>}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <FormControl\r\n              type=\"name\"\r\n              value={name}\r\n              placeholder='Enter NAME'\r\n              onChange={(e)=>setName(e.target.value)}\r\n              />\r\n          </Form.Group> \r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confirmpassword}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {/* <Form.Group controlId=\"pic\">\r\n            <Form.Label>Profile Picture</Form.Label>\r\n            <Form.File\r\n              // onChange={(e) => postDetails(e.target.files[0])}   \r\n              id=\"custom-file\"\r\n              type=\"image/png\"\r\n              label=\"Upload Profile Picture\"\r\n              custom\r\n            /> */}\r\n          {/* </Form.Group> */}\r\n          <Form.Group controlId=\"Roll\">\r\n            <Form.Label>Roll NO</Form.Label>\r\n            <FormControl\r\n              type=\"roll\"\r\n              value={roll}\r\n              placeholder='Enter Roll NO'\r\n              onChange={(e)=>setRoll(e.target.value)}\r\n              />\r\n          </Form.Group> \r\n          <Form.Group controlId=\"branch\">\r\n            <Form.Label>Branch</Form.Label>\r\n            <FormControl\r\n              type=\"name\"\r\n              value={branch}\r\n              placeholder='Enter Branch'\r\n              onChange={(e)=>setBranch(e.target.value)}\r\n              />\r\n          </Form.Group> \r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Have an Account ? <Link to=\"/login\">Login</Link>\r\n          </Col>\r\n        </Row>\r\n\r\n      </div>\r\n\r\n    </MainScreen>\r\n  )\r\n}\r\n\r\nexport default Registerpage","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\MainScreen.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\components\\Loading.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\home\\home.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\components\\ErrorMessage.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\edit\\Edit.js",["120"],[],"import React from 'react'\r\nimport {Button,Col,Form,FormControl,Row} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport ErrorMessage from '../../components/ErrorMessage'\r\nimport MainScreen from '../../components/MainScreen'\r\nimport Loading from '../../components/Loading'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nconst Edit = () => {\r\n  const nav=useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [roll, setRoll] = useState(\"\");\r\n  const [branch, setBranch] = useState(\"\");\r\n  const[homepage,setHome]=useState(false);\r\n  const [pic, setPic] = useState(\r\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n  );\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [loading, setLoading]=useState(false);\r\n  const [error, setError]=useState(false);\r\n  const submitHandler= async(e)=>{\r\n    e.preventDefault();\r\n    if(password!==confirmpassword){\r\n      setMessage(\"Passwords do not match\");\r\n    }\r\n    else{\r\n      setMessage(null);\r\n      try{\r\n        const config={\r\n          baseURL: \"//localhost:5000\",\r\n          origin: true,\r\n          withCredentials: true,\r\n          headers:{\r\n            \"Content-type\":\"application/json\"\r\n          }\r\n        };\r\n        setLoading(true);\r\n        const {data}= await axios.post(\r\n          \"//localhost:5000/api/users\",\r\n          {name,email,password,pic,roll,branch},\r\n          config\r\n        );\r\n        setLoading(false);\r\n        localStorage.setItem('UserInfo',JSON.stringify(data));\r\n        setHome(true);\r\n      }\r\n      catch(error){\r\n          setError(error.message);\r\n      }\r\n    }\r\n    console.log(roll);\r\n  }\r\n  return (\r\n    <MainScreen title=\"Edit Info\">\r\n      <div className='loginContainer'>\r\n        {error && <ErrorMessage variant='danger'>{error}</ErrorMessage>}\r\n        {loading && <Loading/>}\r\n        {homepage&&nav(\"/home\")}\r\n        {message && <ErrorMessage variant='danger'>{message}</ErrorMessage>}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <FormControl\r\n              type=\"name\"\r\n              value={name}\r\n              placeholder='Enter NAME'\r\n              onChange={(e)=>setName(e.target.value)}\r\n              />\r\n          </Form.Group> \r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confirmpassword}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {/* <Form.Group controlId=\"pic\">\r\n            <Form.Label>Profile Picture</Form.Label>\r\n            <Form.File\r\n              // onChange={(e) => postDetails(e.target.files[0])}   \r\n              id=\"custom-file\"\r\n              type=\"image/png\"\r\n              label=\"Upload Profile Picture\"\r\n              custom\r\n            /> */}\r\n          {/* </Form.Group> */}\r\n          <Form.Group controlId=\"Roll\">\r\n            <Form.Label>Roll NO</Form.Label>\r\n            <FormControl\r\n              type=\"roll\"\r\n              value={roll}\r\n              placeholder='Enter Roll NO'\r\n              onChange={(e)=>setRoll(e.target.value)}\r\n              />\r\n          </Form.Group> \r\n          <Form.Group controlId=\"branch\">\r\n            <Form.Label>Branch</Form.Label>\r\n            <FormControl\r\n              type=\"name\"\r\n              value={branch}\r\n              placeholder='Enter Branch'\r\n              onChange={(e)=>setBranch(e.target.value)}\r\n              />\r\n          </Form.Group> \r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Have an Account ? <Link to=\"/login\">Login</Link>\r\n          </Col>\r\n        </Row>\r\n\r\n      </div>\r\n\r\n    </MainScreen>\r\n  )\r\n}\r\n\r\nexport default Edit","C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\details\\info.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\details\\Info.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\explore\\Explore.js",["121"],[],"import React, { useEffect, useState} from 'react'\r\nimport { Button,Form,FormControl} from 'react-bootstrap'\r\nimport \"./explore.css\"\r\n// import Grid from '@material-ui/core/Grid'\r\nimport Thumb from '../../components/Thumb'\r\nconst Explore = () => {\r\n  const[pokemons,setpokemon]=useState(null);\r\n  const [onepokemon,setonepoke]=useState(\"\");\r\n  const [allpokemon,setAllpoke]=useState([]);\r\n  const [loadmore,setLoad]=useState(\"https://pokeapi.co/api/v2/pokemon?limit=20\")\r\n  // console.log(loadmore)\r\n  const submitHandler= async(e)=>{\r\n    e.preventDefault();\r\n    const res=await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemons}`)     \r\n    const data =await res.json()\r\n    setonepoke(data);\r\n    console.log(onepokemon);\r\n  }\r\n  const getallpoke = async () =>{\r\n    const res= await fetch(loadmore);\r\n    const data= await res.json()\r\n    \r\n    // console.log(data.results)\r\n    setLoad(data.next)\r\n    function createpoke (result){\r\n      // console.log(result)\r\n      result.forEach( async(pokemon) => {\r\n        const res=await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)     \r\n        const data =await res.json()\r\n        console.log(\"lol\")\r\n        console.log(data);\r\n        // allpokemon.push(data)\r\n        setAllpoke(currentList=>[...currentList,data])\r\n        \r\n        allpokemon.sort((a, b) => a.id - b.id)\r\n        console.log(\"lolol\")\r\n        console.log(allpokemon);\r\n      });\r\n    }\r\n    console.log(\"maybe\")\r\n    console.log(allpokemon);\r\n    createpoke(data.results)  // console.log(data.results[0]);\r\n  };\r\n  useEffect(()=>{\r\n    console.log(\"here\")\r\n    async function apii (){\r\n     await getallpoke();\r\n    }\r\n    apii()    \r\n    \r\n  },[])\r\n  if(pokemons && onepokemon){\r\n    return(\r\n      <div className='loginContainer'>\r\n        <div>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <FormControl\r\n              type=\"name\"\r\n              value={pokemons}\r\n              placeholder='Enter NAME'\r\n              onChange={(e)=>setpokemon(e.target.value)}\r\n              />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Search\r\n          </Button> \r\n          </Form>\r\n        </div>\r\n                <Thumb\r\n                key=\"0\"\r\n                id={onepokemon.id}\r\n                image={onepokemon.sprites.other.dream_world.front_default}\r\n                name={onepokemon.name}\r\n                type={onepokemon.types[0].type.name}\r\n                base_experience={onepokemon.base_experience}\r\n              />\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className='app-container'>\r\n      {/* <h1>Explore</h1> */}\r\n      <div className='loginContainer'>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <FormControl\r\n              type=\"name\"\r\n              value={pokemons}\r\n              placeholder='Enter NAME'\r\n              onChange={(e)=>setpokemon(e.target.value)}\r\n              />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Search\r\n          </Button> \r\n          </Form>\r\n      </div>\r\n      <div className='container'>\r\n        <div className='loginContainer'>\r\n        {allpokemon && allpokemon.map( (pokemonStats, index) => \r\n              <div>\r\n                <Thumb\r\n                key={index}\r\n                id={pokemonStats.id}\r\n                image={pokemonStats.sprites.other.dream_world.front_default}\r\n                name={pokemonStats.name}\r\n                type={pokemonStats.types[0].type.name}\r\n                base_experience={pokemonStats.base_experience}\r\n              />\r\n              </div>\r\n            )}\r\n            <Button className='Load-more' onClick={() => getallpoke()}>Load more</Button>\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Explore","C:\\Users\\Rohith\\mern\\frontend\\src\\components\\Thumb.js",[],[],"C:\\Users\\Rohith\\mern\\frontend\\src\\screens\\upload\\Upload.js",["122","123","124"],[],"import * as tf from \"@tensorflow/tfjs\";\r\nimport idx2class1 from \"./classIdxDict2\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./Navbar.js\";\r\n//import \"./App.css\";\r\n\r\nconst Upload = () => {\r\n  // usestate for setting a javascript\r\n  // object for storing and using data\r\n  const [file, setFile] = useState(null);\r\n  //   const [model, setModel] = useState(null);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [topkPredNames, setPrediction] = useState(null);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  const [model, setModel] = useState(null);\r\n  function readImage(file) {\r\n    return new Promise((rs, rj) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => rs(fileReader.result);\r\n      fileReader.onerror = () => rj(fileReader.error);\r\n      fileReader.readAsDataURL(file);\r\n    });\r\n  }\r\n\r\n  async function handleImgUpload(event) {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n\r\n    const _file = files[0];\r\n    const fileData = await readImage(_file);\r\n    setFile(fileData);\r\n    setProcessing(true);\r\n  }\r\n\r\n  const MODEL_HTTP_URL = \"api/pokeml/classify\";\r\n  const MODEL_INDEXEDDB_URL = \"indexeddb://poke-model\";\r\n\r\n  const getTopKPred = (pred, k) => {\r\n    const predIdx = [];\r\n    const predNames = [];\r\n\r\n    const topkPred = [...pred].sort((a, b) => b - a).slice(0, k);\r\n    console.log(topkPred);\r\n    topkPred.map((i) => predIdx.push(pred.indexOf(i)));\r\n    predIdx.map((i) => predNames.push(idx2class1[i]));\r\n    console.log(predNames);\r\n    return predNames;\r\n  };\r\n\r\n  const getTopKPredPokeObj = (pred, k) => {\r\n    const foundPokeObj = [];\r\n    const predPokeName = getTopKPred(pred, k);\r\n    console.log(predPokeName);\r\n    // predPokeName.map((name) =>\r\n    //   foundPokeObj.push(pokeObjFromName(name, pokeObjList))\r\n    // );\r\n\r\n    return predPokeName;\r\n  };\r\n  useEffect(() => {\r\n    async function fetchModel() {\r\n      try {\r\n        const localClassifierModel = await tf.loadLayersModel(\r\n          MODEL_INDEXEDDB_URL\r\n        );\r\n\r\n        setModel(localClassifierModel);\r\n        console.log(\"Model loaded from IndexedDB\");\r\n      } catch (e) {\r\n        try {\r\n          const classifierModel = await tf.loadLayersModel(MODEL_HTTP_URL);\r\n\r\n          console.log(classifierModel);\r\n          setModel(classifierModel);\r\n          console.log(\"Model Loaded\");\r\n          await classifierModel.save(MODEL_INDEXEDDB_URL);\r\n          console.log(\"Model saved to IndexedDB\");\r\n        } catch (e) {\r\n          console.log(\"Unable to load model at all: \", e);\r\n        }\r\n      }\r\n    }\r\n    fetchModel();\r\n  }, []);\r\n  useEffect(() => {\r\n    async function predict() {\r\n      if (imageLoaded && file) {\r\n        const imageElement = document.createElement(\"img\");\r\n        imageElement.src = file;\r\n\r\n        imageElement.onload = async () => {\r\n          const tensor = tf.browser\r\n            .fromPixels(imageElement)\r\n            .resizeNearestNeighbor([120, 120])\r\n            .toFloat()\r\n            .sub(127)\r\n            .div(127)\r\n            .expandDims();\r\n\r\n          console.log(\"fuck\");\r\n          const y_pred = await model.predict(tensor).data();\r\n          //   console.log(y_pred);\r\n          // console.log(pokemonState);\r\n\r\n          const topkPredNames = getTopKPredPokeObj(y_pred, 3);\r\n\r\n          //   dispatch(setePredictions({ predictions: topkPredNames }));\r\n          setPrediction(topkPredNames);\r\n          console.log(topkPredNames);\r\n          console.log(\"-----------\");\r\n          //   console.log(prediction);\r\n          setProcessing(false);\r\n          setImageLoaded(false);\r\n          return topkPredNames;\r\n          //   setPrediction(parseInt(prediction, 10));\r\n        };\r\n      }\r\n    }\r\n\r\n    predict();\r\n  }, [imageLoaded, model, file]);\r\n\r\n  return (\r\n    <div className=\"File-input-container\">\r\n      <form className=\"Form\">\r\n        <label htmlFor=\"upload-image\">Upload image</label>\r\n        <input\r\n          id=\"image-selector\"\r\n          type=\"file\"\r\n          name=\"upload-image\"\r\n          accept=\"image/*\"\r\n          className=\"File-selector\"\r\n          onChange={handleImgUpload}\r\n          disabled={!model || processing}\r\n        />\r\n      </form>\r\n      <div className=\"Img-display-container\">\r\n        <img\r\n          onLoad={() => {\r\n            setImageLoaded(true);\r\n          }}\r\n          alt=\"\"\r\n          src={file}\r\n        />\r\n      </div>\r\n      <div className=\"Img-processing-container\">\r\n        {processing ? (\r\n          <p>Loading ...</p>\r\n        ) : topkPredNames !== null ? (\r\n          <div>\r\n            <p>{topkPredNames[0]}</p>\r\n            <p>{topkPredNames[1]}</p>\r\n            <p>{topkPredNames[2]}</p>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n",{"ruleId":"125","severity":1,"message":"126","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":14},{"ruleId":"125","severity":1,"message":"129","line":2,"column":32,"nodeType":"127","messageId":"128","endLine":2,"endColumn":36},{"ruleId":"125","severity":1,"message":"130","line":2,"column":37,"nodeType":"127","messageId":"128","endLine":2,"endColumn":48},{"ruleId":"125","severity":1,"message":"131","line":16,"column":12,"nodeType":"127","messageId":"128","endLine":16,"endColumn":17},{"ruleId":"125","severity":1,"message":"132","line":17,"column":15,"nodeType":"127","messageId":"128","endLine":17,"endColumn":21},{"ruleId":"125","severity":1,"message":"132","line":17,"column":15,"nodeType":"127","messageId":"128","endLine":17,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":51,"column":5,"nodeType":"135","endLine":51,"endColumn":7,"suggestions":"136"},{"ruleId":"125","severity":1,"message":"137","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":14},{"ruleId":"125","severity":1,"message":"138","line":54,"column":11,"nodeType":"127","messageId":"128","endLine":54,"endColumn":23},{"ruleId":"133","severity":1,"message":"139","line":124,"column":6,"nodeType":"135","endLine":124,"endColumn":32,"suggestions":"140"},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'error' is assigned a value but never used.","'setPic' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getallpoke'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'NavBar' is defined but never used.","'foundPokeObj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTopKPredPokeObj'. Either include it or remove the dependency array.",["142"],{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [getallpoke]",{"range":"147","text":"148"},"Update the dependencies array to be: [imageLoaded, model, file, getTopKPredPokeObj]",{"range":"149","text":"150"},[1684,1686],"[getallpoke]",[3787,3813],"[imageLoaded, model, file, getTopKPredPokeObj]"]